

http://www.countyhealthrankings.org/sites/default/files/state/downloads/2013%20County%20Health%20Ranking%20Colorado%20Data%20-%20v1_0.xls

http://www.countyhealthrankings.org/sites/default/files/state/downloads/2013%20County%20Health%20Ranking%20Alabama%20Data%20-%20v1_0.xls


http://www.countyhealthrankings.org/sites/default/files/state/downloads/2019%20County%20Health%20Rankings%20Colorado%20Data%20-%20v1_0.xls

http://www.countyhealthrankings.org/sites/default/files/state/downloads/2018%20County%20Health%20Rankings%20Arizona%20Data%20-%20v3.xls

http://www.countyhealthrankings.org/sites/default/files/state/downloads/2017%20County%20Health%20Rankings%20Arizona%20Data%20-%20v2.xls


http://www.countyhealthrankings.org/sites/default/files/state/downloads/2010%20County%20Health%20Ranking%20Arizona%20Data%20-%20v2.xls

file_to_load = "CaliforniaDiabetes.csv"
file_to_load = "Project1\DM_PREV_ALL_STATES.csv"
income_to_load = "Project1\WikiIncomeSource.csv"
dData = pd.read_csv(file_to_load)
iData = pd.read_csv(income_to_load)
print(len(dData.columns))
x = [3, 5,6,7,8, 9]
drop = []

data = pd.DataFrame(x)

for x in range(9):
    data[x+1] = data[x]+7
for x in data.columns:    
    drop.append(data[x].values.tolist())

    
cols =  list( itertools.chain.from_iterable(drop)) 

iData.columns = ['Rank', 'State', 'County', 'Per Capita Income', 'Median Household Income', 'Median Family Income', 'Population', 'N# of households']
incomeData = iData.dropna()

axis=1axis=1

cols = [0, 2] + list(range(13, 23))
print(cols)
years = list(range(2009, 2014, 1))
print(years)

labels = ['State', 'County']
a= df.iloc[:, cols]
diabetesData.head(10)

len(df.columns)
#a.columns = a.iloc[0]
a.iloc[1:, :]
a.columns

(a['Unnamed: 39'])
incomeData[incomeData['State']=="Alabama"]
